name: Tests (Unit & E2E) Frontend & Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jardin
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        project: [backend, frontend]
        node-version: [18]
    name: Run ${{ matrix.project }} Unit Tests (Node ${{ matrix.node-version }})
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      # Cette étape ne s'exécute QUE pour le backend
      - name: Setup DB & Prisma (backend only)
        if: ${{ matrix.project == 'backend' }}
        working-directory: backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/jardin
        run: |
          npx prisma generate
          npx prisma migrate deploy

      # Lancement des tests unitaires pour backend et frontend
      - name: Run unit tests
        working-directory: ${{ matrix.project }}
        
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/jardin
        run: npm test

  # Job pour les tests E2E Playwright
  e2e:
    runs-on: ubuntu-latest
    needs: unit-tests
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jardin
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Backend
      - name: Install Backend
        working-directory: backend
        run: npm ci

      - name: Setup Prisma & Migrate
        working-directory: backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/jardin
        run: |
          npx prisma generate
          npx prisma db push

      # Frontend
      - name: Install Frontend
        working-directory: frontend
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: frontend
        run: npx playwright test --config=playwright.config.js
