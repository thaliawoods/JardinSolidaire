
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AvisScalarFieldEnum = {
  id_avis: 'id_avis',
  id_utilisateur: 'id_utilisateur',
  id_jardin: 'id_jardin',
  note: 'note',
  commentaire: 'commentaire',
  date_avis: 'date_avis'
};

exports.Prisma.DisponibilitesScalarFieldEnum = {
  id_disponibilite: 'id_disponibilite',
  id_jardin: 'id_jardin',
  date_dispo: 'date_dispo',
  heure_debut: 'heure_debut',
  heure_fin: 'heure_fin',
  statut: 'statut'
};

exports.Prisma.Heurescumul_esScalarFieldEnum = {
  id_historique: 'id_historique',
  id_utilisateur: 'id_utilisateur',
  heures_travaillees: 'heures_travaillees',
  date_maj: 'date_maj'
};

exports.Prisma.JardinScalarFieldEnum = {
  id_jardin: 'id_jardin',
  id_proprietaire: 'id_proprietaire',
  titre: 'titre',
  description: 'description',
  adresse: 'adresse',
  superficie: 'superficie',
  type: 'type',
  besoins: 'besoins',
  photos: 'photos',
  date_publication: 'date_publication',
  statut: 'statut',
  note_moyenne: 'note_moyenne'
};

exports.Prisma.MessagerieScalarFieldEnum = {
  id_message: 'id_message',
  id_envoyeur: 'id_envoyeur',
  id_destinataire: 'id_destinataire',
  contenu: 'contenu',
  date_envoi: 'date_envoi',
  lu: 'lu'
};

exports.Prisma.ReservationScalarFieldEnum = {
  id_reservation: 'id_reservation',
  id_utilisateur: 'id_utilisateur',
  id_jardin: 'id_jardin',
  id_disponibilite: 'id_disponibilite',
  statut: 'statut',
  date_reservation: 'date_reservation',
  commentaires: 'commentaires'
};

exports.Prisma.UtilisateurScalarFieldEnum = {
  id_utilisateur: 'id_utilisateur',
  prenom: 'prenom',
  nom: 'nom',
  email: 'email',
  mot_de_passe: 'mot_de_passe',
  role: 'role',
  photo_profil: 'photo_profil',
  biographie: 'biographie',
  date_inscription: 'date_inscription',
  telephone: 'telephone',
  adresse: 'adresse',
  note_moyenne: 'note_moyenne'
};

exports.Prisma.CompetenceScalarFieldEnum = {
  id_competence: 'id_competence',
  nom: 'nom'
};

exports.Prisma.UtilisateurCompetenceScalarFieldEnum = {
  id_utilisateur_competence: 'id_utilisateur_competence',
  id_utilisateur: 'id_utilisateur',
  id_competence: 'id_competence'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  avis: 'avis',
  disponibilites: 'disponibilites',
  heurescumul_es: 'heurescumul_es',
  jardin: 'jardin',
  messagerie: 'messagerie',
  reservation: 'reservation',
  utilisateur: 'utilisateur',
  competence: 'competence',
  utilisateurCompetence: 'utilisateurCompetence'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
